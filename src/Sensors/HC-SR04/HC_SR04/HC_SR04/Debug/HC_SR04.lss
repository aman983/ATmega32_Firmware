
HC_SR04.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000009d4  00000a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000aac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f6  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fb  00000000  00000000  0000154e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000055b  00000000  00000000  00001d49  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  000022a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000403  00000000  00000000  00002340  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000161  00000000  00000000  00002743  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000028a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 83 00 	call	0x106	; 0x106 <main>
  7a:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <HC_SR04_INIT>:
#include <util/delay.h>
#include "HCSR04.h"

void HC_SR04_INIT(){
	// Set trigger pin as output
	DDRA |= (1 << 1);
  82:	8a b3       	in	r24, 0x1a	; 26
  84:	82 60       	ori	r24, 0x02	; 2
  86:	8a bb       	out	0x1a, r24	; 26
	// Set echo pin as input
	DDRA &= ~(1 << 0);
  88:	8a b3       	in	r24, 0x1a	; 26
  8a:	8e 7f       	andi	r24, 0xFE	; 254
  8c:	8a bb       	out	0x1a, r24	; 26
	
	// Ensure trigger pin is low initially
	PORTA &= ~(1 << 1);
  8e:	8b b3       	in	r24, 0x1b	; 27
  90:	8d 7f       	andi	r24, 0xFD	; 253
  92:	8b bb       	out	0x1b, r24	; 27
  94:	08 95       	ret

00000096 <GET_DISTANCE>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	86 e7       	ldi	r24, 0x76	; 118
  9a:	91 e0       	ldi	r25, 0x01	; 1
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <GET_DISTANCE+0x6>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <GET_DISTANCE+0x10>
  a6:	00 00       	nop
uint8_t GET_DISTANCE(){
	_delay_ms(60);  // Wait for sensor to stabilize
	uint8_t signal_time = 0;
	
	// Sending pulse to the trigger pin
	PORTA |= (1 << 1);  // Set trigger pin high
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	2a e1       	ldi	r18, 0x1A	; 26
  b0:	2a 95       	dec	r18
  b2:	f1 f7       	brne	.-4      	; 0xb0 <GET_DISTANCE+0x1a>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <GET_DISTANCE+0x20>
	_delay_us(10);       // Wait for 10 microseconds
	PORTA &= ~(1 << 1);  // Set trigger pin low
  b6:	8b b3       	in	r24, 0x1b	; 27
  b8:	8d 7f       	andi	r24, 0xFD	; 253
  ba:	8b bb       	out	0x1b, r24	; 27
	
	// Wait for echo pin to go high (indicating pulse start)
	while (!(PINA & (1 << 0)));
  bc:	c8 9b       	sbis	0x19, 0	; 25
  be:	fe cf       	rjmp	.-4      	; 0xbc <GET_DISTANCE+0x26>
	
	// Measure pulse width using Timer1 (16-bit timer for higher precision)
	TCNT1 = 0;  // Reset timer count
  c0:	1d bc       	out	0x2d, r1	; 45
  c2:	1c bc       	out	0x2c, r1	; 44
	TCCR1B |= (1 << CS11);  // Set prescaler to 8 (for microsecond resolution)
  c4:	8e b5       	in	r24, 0x2e	; 46
  c6:	82 60       	ori	r24, 0x02	; 2
  c8:	8e bd       	out	0x2e, r24	; 46
	
	// Wait for the echo pin to go low (indicating pulse end)
	while (PINA & (1 << 0));
  ca:	c8 99       	sbic	0x19, 0	; 25
  cc:	fe cf       	rjmp	.-4      	; 0xca <GET_DISTANCE+0x34>
	
	// Stop the timer
	TCCR1B &= ~(1 << CS11);
  ce:	8e b5       	in	r24, 0x2e	; 46
  d0:	8d 7f       	andi	r24, 0xFD	; 253
  d2:	8e bd       	out	0x2e, r24	; 46
	
	// The timer count now holds the pulse width in timer ticks
	signal_time = TCNT1;
  d4:	6c b5       	in	r22, 0x2c	; 44
  d6:	7d b5       	in	r23, 0x2d	; 45
	// Convert the time to distance (in cm) if necessary
	// signal_time is in microseconds, and you can use the formula:
	// distance = (signal_time * speed_of_sound) / 2
	// Where speed_of_sound = 343 m/s = 0.0343 cm/us
	
	return (signal_time * 0.0343) / 2;  // Return pulse duration (in timer ticks)
  d8:	77 27       	eor	r23, r23
  da:	07 2e       	mov	r0, r23
  dc:	00 0c       	add	r0, r0
  de:	88 0b       	sbc	r24, r24
  e0:	99 0b       	sbc	r25, r25
  e2:	0e 94 05 01 	call	0x20a	; 0x20a <__floatsisf>
  e6:	28 e2       	ldi	r18, 0x28	; 40
  e8:	3e e7       	ldi	r19, 0x7E	; 126
  ea:	4c e0       	ldi	r20, 0x0C	; 12
  ec:	5d e3       	ldi	r21, 0x3D	; 61
  ee:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__mulsf3>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	5f e3       	ldi	r21, 0x3F	; 63
  fa:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__mulsf3>
  fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__fixunssfsi>
 102:	86 2f       	mov	r24, r22
}
 104:	08 95       	ret

00000106 <main>:

#include "UART.h"
#include "HCSR04.h"

int main(void)
{
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	64 97       	sbiw	r28, 0x14	; 20
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	UART_INIT(SET_BAUD_9600);
 11a:	83 e3       	ldi	r24, 0x33	; 51
 11c:	0e 94 b4 00 	call	0x168	; 0x168 <UART_INIT>
    HC_SR04_INIT();
 120:	0e 94 41 00 	call	0x82	; 0x82 <HC_SR04_INIT>
	
	while (1) 
    {
		sprintf(buffer, "D = %d\n", GET_DISTANCE());
 124:	0e 94 4b 00 	call	0x96	; 0x96 <GET_DISTANCE>
 128:	1f 92       	push	r1
 12a:	8f 93       	push	r24
 12c:	80 e6       	ldi	r24, 0x60	; 96
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	8e 01       	movw	r16, r28
 136:	0f 5f       	subi	r16, 0xFF	; 255
 138:	1f 4f       	sbci	r17, 0xFF	; 255
 13a:	1f 93       	push	r17
 13c:	0f 93       	push	r16
 13e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <sprintf>
		UART_SEND(buffer);
 142:	c8 01       	movw	r24, r16
 144:	0e 94 c4 00 	call	0x188	; 0x188 <UART_SEND>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	2f ef       	ldi	r18, 0xFF	; 255
 14a:	80 e7       	ldi	r24, 0x70	; 112
 14c:	92 e0       	ldi	r25, 0x02	; 2
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0x48>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0x52>
 158:	00 00       	nop
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	de cf       	rjmp	.-68     	; 0x124 <main+0x1e>

00000168 <UART_INIT>:
#include <util/delay.h>

#include "UART.h"

void UART_INIT(UART_CONFIG C){
	DDRD |= (1 << 2);
 168:	91 b3       	in	r25, 0x11	; 17
 16a:	94 60       	ori	r25, 0x04	; 4
 16c:	91 bb       	out	0x11, r25	; 17
	PORTD &= ~(1 << 2);
 16e:	92 b3       	in	r25, 0x12	; 18
 170:	9b 7f       	andi	r25, 0xFB	; 251
 172:	92 bb       	out	0x12, r25	; 18
	
	UCSRA = 0x00;
 174:	1b b8       	out	0x0b, r1	; 11
	UCSRB |= (1 << 3) | (1 << 4);
 176:	9a b1       	in	r25, 0x0a	; 10
 178:	98 61       	ori	r25, 0x18	; 24
 17a:	9a b9       	out	0x0a, r25	; 10
	UCSRC |= (1 << 2) | (1 << 3);
 17c:	90 b5       	in	r25, 0x20	; 32
 17e:	9c 60       	ori	r25, 0x0C	; 12
 180:	90 bd       	out	0x20, r25	; 32
	
	UBRRH = 0x00;
 182:	10 bc       	out	0x20, r1	; 32
	UBRRL = C; // baud 9600
 184:	89 b9       	out	0x09, r24	; 9
 186:	08 95       	ret

00000188 <UART_SEND>:
}

void UART_SEND(char *STR){
 188:	fc 01       	movw	r30, r24
	while(*STR){
 18a:	0a c0       	rjmp	.+20     	; 0x1a0 <UART_SEND+0x18>
		UDR = *STR;
 18c:	8c b9       	out	0x0c, r24	; 12
		while((UCSRA & 0x40) == 0);
 18e:	5e 9b       	sbis	0x0b, 6	; 11
 190:	fe cf       	rjmp	.-4      	; 0x18e <UART_SEND+0x6>
 192:	8f ec       	ldi	r24, 0xCF	; 207
 194:	97 e0       	ldi	r25, 0x07	; 7
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <UART_SEND+0xe>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <UART_SEND+0x14>
 19c:	00 00       	nop
		_delay_ms(1);
		STR++;
 19e:	31 96       	adiw	r30, 0x01	; 1
	UBRRH = 0x00;
	UBRRL = C; // baud 9600
}

void UART_SEND(char *STR){
	while(*STR){
 1a0:	80 81       	ld	r24, Z
 1a2:	81 11       	cpse	r24, r1
 1a4:	f3 cf       	rjmp	.-26     	; 0x18c <UART_SEND+0x4>
		UDR = *STR;
		while((UCSRA & 0x40) == 0);
		_delay_ms(1);
		STR++;
	}
}
 1a6:	08 95       	ret

000001a8 <__fixunssfsi>:
 1a8:	0e 94 48 01 	call	0x290	; 0x290 <__fp_splitA>
 1ac:	88 f0       	brcs	.+34     	; 0x1d0 <__fixunssfsi+0x28>
 1ae:	9f 57       	subi	r25, 0x7F	; 127
 1b0:	98 f0       	brcs	.+38     	; 0x1d8 <__fixunssfsi+0x30>
 1b2:	b9 2f       	mov	r27, r25
 1b4:	99 27       	eor	r25, r25
 1b6:	b7 51       	subi	r27, 0x17	; 23
 1b8:	b0 f0       	brcs	.+44     	; 0x1e6 <__fixunssfsi+0x3e>
 1ba:	e1 f0       	breq	.+56     	; 0x1f4 <__fixunssfsi+0x4c>
 1bc:	66 0f       	add	r22, r22
 1be:	77 1f       	adc	r23, r23
 1c0:	88 1f       	adc	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	1a f0       	brmi	.+6      	; 0x1cc <__fixunssfsi+0x24>
 1c6:	ba 95       	dec	r27
 1c8:	c9 f7       	brne	.-14     	; 0x1bc <__fixunssfsi+0x14>
 1ca:	14 c0       	rjmp	.+40     	; 0x1f4 <__fixunssfsi+0x4c>
 1cc:	b1 30       	cpi	r27, 0x01	; 1
 1ce:	91 f0       	breq	.+36     	; 0x1f4 <__fixunssfsi+0x4c>
 1d0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <__fp_zero>
 1d4:	b1 e0       	ldi	r27, 0x01	; 1
 1d6:	08 95       	ret
 1d8:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <__fp_zero>
 1dc:	67 2f       	mov	r22, r23
 1de:	78 2f       	mov	r23, r24
 1e0:	88 27       	eor	r24, r24
 1e2:	b8 5f       	subi	r27, 0xF8	; 248
 1e4:	39 f0       	breq	.+14     	; 0x1f4 <__fixunssfsi+0x4c>
 1e6:	b9 3f       	cpi	r27, 0xF9	; 249
 1e8:	cc f3       	brlt	.-14     	; 0x1dc <__fixunssfsi+0x34>
 1ea:	86 95       	lsr	r24
 1ec:	77 95       	ror	r23
 1ee:	67 95       	ror	r22
 1f0:	b3 95       	inc	r27
 1f2:	d9 f7       	brne	.-10     	; 0x1ea <__fixunssfsi+0x42>
 1f4:	3e f4       	brtc	.+14     	; 0x204 <__fixunssfsi+0x5c>
 1f6:	90 95       	com	r25
 1f8:	80 95       	com	r24
 1fa:	70 95       	com	r23
 1fc:	61 95       	neg	r22
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	8f 4f       	sbci	r24, 0xFF	; 255
 202:	9f 4f       	sbci	r25, 0xFF	; 255
 204:	08 95       	ret

00000206 <__floatunsisf>:
 206:	e8 94       	clt
 208:	09 c0       	rjmp	.+18     	; 0x21c <__floatsisf+0x12>

0000020a <__floatsisf>:
 20a:	97 fb       	bst	r25, 7
 20c:	3e f4       	brtc	.+14     	; 0x21c <__floatsisf+0x12>
 20e:	90 95       	com	r25
 210:	80 95       	com	r24
 212:	70 95       	com	r23
 214:	61 95       	neg	r22
 216:	7f 4f       	sbci	r23, 0xFF	; 255
 218:	8f 4f       	sbci	r24, 0xFF	; 255
 21a:	9f 4f       	sbci	r25, 0xFF	; 255
 21c:	99 23       	and	r25, r25
 21e:	a9 f0       	breq	.+42     	; 0x24a <__floatsisf+0x40>
 220:	f9 2f       	mov	r31, r25
 222:	96 e9       	ldi	r25, 0x96	; 150
 224:	bb 27       	eor	r27, r27
 226:	93 95       	inc	r25
 228:	f6 95       	lsr	r31
 22a:	87 95       	ror	r24
 22c:	77 95       	ror	r23
 22e:	67 95       	ror	r22
 230:	b7 95       	ror	r27
 232:	f1 11       	cpse	r31, r1
 234:	f8 cf       	rjmp	.-16     	; 0x226 <__floatsisf+0x1c>
 236:	fa f4       	brpl	.+62     	; 0x276 <__floatsisf+0x6c>
 238:	bb 0f       	add	r27, r27
 23a:	11 f4       	brne	.+4      	; 0x240 <__floatsisf+0x36>
 23c:	60 ff       	sbrs	r22, 0
 23e:	1b c0       	rjmp	.+54     	; 0x276 <__floatsisf+0x6c>
 240:	6f 5f       	subi	r22, 0xFF	; 255
 242:	7f 4f       	sbci	r23, 0xFF	; 255
 244:	8f 4f       	sbci	r24, 0xFF	; 255
 246:	9f 4f       	sbci	r25, 0xFF	; 255
 248:	16 c0       	rjmp	.+44     	; 0x276 <__floatsisf+0x6c>
 24a:	88 23       	and	r24, r24
 24c:	11 f0       	breq	.+4      	; 0x252 <__floatsisf+0x48>
 24e:	96 e9       	ldi	r25, 0x96	; 150
 250:	11 c0       	rjmp	.+34     	; 0x274 <__floatsisf+0x6a>
 252:	77 23       	and	r23, r23
 254:	21 f0       	breq	.+8      	; 0x25e <__floatsisf+0x54>
 256:	9e e8       	ldi	r25, 0x8E	; 142
 258:	87 2f       	mov	r24, r23
 25a:	76 2f       	mov	r23, r22
 25c:	05 c0       	rjmp	.+10     	; 0x268 <__floatsisf+0x5e>
 25e:	66 23       	and	r22, r22
 260:	71 f0       	breq	.+28     	; 0x27e <__floatsisf+0x74>
 262:	96 e8       	ldi	r25, 0x86	; 134
 264:	86 2f       	mov	r24, r22
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	2a f0       	brmi	.+10     	; 0x276 <__floatsisf+0x6c>
 26c:	9a 95       	dec	r25
 26e:	66 0f       	add	r22, r22
 270:	77 1f       	adc	r23, r23
 272:	88 1f       	adc	r24, r24
 274:	da f7       	brpl	.-10     	; 0x26c <__floatsisf+0x62>
 276:	88 0f       	add	r24, r24
 278:	96 95       	lsr	r25
 27a:	87 95       	ror	r24
 27c:	97 f9       	bld	r25, 7
 27e:	08 95       	ret

00000280 <__fp_split3>:
 280:	57 fd       	sbrc	r21, 7
 282:	90 58       	subi	r25, 0x80	; 128
 284:	44 0f       	add	r20, r20
 286:	55 1f       	adc	r21, r21
 288:	59 f0       	breq	.+22     	; 0x2a0 <__fp_splitA+0x10>
 28a:	5f 3f       	cpi	r21, 0xFF	; 255
 28c:	71 f0       	breq	.+28     	; 0x2aa <__fp_splitA+0x1a>
 28e:	47 95       	ror	r20

00000290 <__fp_splitA>:
 290:	88 0f       	add	r24, r24
 292:	97 fb       	bst	r25, 7
 294:	99 1f       	adc	r25, r25
 296:	61 f0       	breq	.+24     	; 0x2b0 <__fp_splitA+0x20>
 298:	9f 3f       	cpi	r25, 0xFF	; 255
 29a:	79 f0       	breq	.+30     	; 0x2ba <__fp_splitA+0x2a>
 29c:	87 95       	ror	r24
 29e:	08 95       	ret
 2a0:	12 16       	cp	r1, r18
 2a2:	13 06       	cpc	r1, r19
 2a4:	14 06       	cpc	r1, r20
 2a6:	55 1f       	adc	r21, r21
 2a8:	f2 cf       	rjmp	.-28     	; 0x28e <__fp_split3+0xe>
 2aa:	46 95       	lsr	r20
 2ac:	f1 df       	rcall	.-30     	; 0x290 <__fp_splitA>
 2ae:	08 c0       	rjmp	.+16     	; 0x2c0 <__fp_splitA+0x30>
 2b0:	16 16       	cp	r1, r22
 2b2:	17 06       	cpc	r1, r23
 2b4:	18 06       	cpc	r1, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	f1 cf       	rjmp	.-30     	; 0x29c <__fp_splitA+0xc>
 2ba:	86 95       	lsr	r24
 2bc:	71 05       	cpc	r23, r1
 2be:	61 05       	cpc	r22, r1
 2c0:	08 94       	sec
 2c2:	08 95       	ret

000002c4 <__fp_zero>:
 2c4:	e8 94       	clt

000002c6 <__fp_szero>:
 2c6:	bb 27       	eor	r27, r27
 2c8:	66 27       	eor	r22, r22
 2ca:	77 27       	eor	r23, r23
 2cc:	cb 01       	movw	r24, r22
 2ce:	97 f9       	bld	r25, 7
 2d0:	08 95       	ret

000002d2 <__mulsf3>:
 2d2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__mulsf3x>
 2d6:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__fp_round>
 2da:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscA>
 2de:	38 f0       	brcs	.+14     	; 0x2ee <__mulsf3+0x1c>
 2e0:	0e 94 e6 01 	call	0x3cc	; 0x3cc <__fp_pscB>
 2e4:	20 f0       	brcs	.+8      	; 0x2ee <__mulsf3+0x1c>
 2e6:	95 23       	and	r25, r21
 2e8:	11 f0       	breq	.+4      	; 0x2ee <__mulsf3+0x1c>
 2ea:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_inf>
 2ee:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_nan>
 2f2:	11 24       	eor	r1, r1
 2f4:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__fp_szero>

000002f8 <__mulsf3x>:
 2f8:	0e 94 40 01 	call	0x280	; 0x280 <__fp_split3>
 2fc:	70 f3       	brcs	.-36     	; 0x2da <__mulsf3+0x8>

000002fe <__mulsf3_pse>:
 2fe:	95 9f       	mul	r25, r21
 300:	c1 f3       	breq	.-16     	; 0x2f2 <__mulsf3+0x20>
 302:	95 0f       	add	r25, r21
 304:	50 e0       	ldi	r21, 0x00	; 0
 306:	55 1f       	adc	r21, r21
 308:	62 9f       	mul	r22, r18
 30a:	f0 01       	movw	r30, r0
 30c:	72 9f       	mul	r23, r18
 30e:	bb 27       	eor	r27, r27
 310:	f0 0d       	add	r31, r0
 312:	b1 1d       	adc	r27, r1
 314:	63 9f       	mul	r22, r19
 316:	aa 27       	eor	r26, r26
 318:	f0 0d       	add	r31, r0
 31a:	b1 1d       	adc	r27, r1
 31c:	aa 1f       	adc	r26, r26
 31e:	64 9f       	mul	r22, r20
 320:	66 27       	eor	r22, r22
 322:	b0 0d       	add	r27, r0
 324:	a1 1d       	adc	r26, r1
 326:	66 1f       	adc	r22, r22
 328:	82 9f       	mul	r24, r18
 32a:	22 27       	eor	r18, r18
 32c:	b0 0d       	add	r27, r0
 32e:	a1 1d       	adc	r26, r1
 330:	62 1f       	adc	r22, r18
 332:	73 9f       	mul	r23, r19
 334:	b0 0d       	add	r27, r0
 336:	a1 1d       	adc	r26, r1
 338:	62 1f       	adc	r22, r18
 33a:	83 9f       	mul	r24, r19
 33c:	a0 0d       	add	r26, r0
 33e:	61 1d       	adc	r22, r1
 340:	22 1f       	adc	r18, r18
 342:	74 9f       	mul	r23, r20
 344:	33 27       	eor	r19, r19
 346:	a0 0d       	add	r26, r0
 348:	61 1d       	adc	r22, r1
 34a:	23 1f       	adc	r18, r19
 34c:	84 9f       	mul	r24, r20
 34e:	60 0d       	add	r22, r0
 350:	21 1d       	adc	r18, r1
 352:	82 2f       	mov	r24, r18
 354:	76 2f       	mov	r23, r22
 356:	6a 2f       	mov	r22, r26
 358:	11 24       	eor	r1, r1
 35a:	9f 57       	subi	r25, 0x7F	; 127
 35c:	50 40       	sbci	r21, 0x00	; 0
 35e:	9a f0       	brmi	.+38     	; 0x386 <__mulsf3_pse+0x88>
 360:	f1 f0       	breq	.+60     	; 0x39e <__mulsf3_pse+0xa0>
 362:	88 23       	and	r24, r24
 364:	4a f0       	brmi	.+18     	; 0x378 <__mulsf3_pse+0x7a>
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	bb 1f       	adc	r27, r27
 36c:	66 1f       	adc	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	91 50       	subi	r25, 0x01	; 1
 374:	50 40       	sbci	r21, 0x00	; 0
 376:	a9 f7       	brne	.-22     	; 0x362 <__mulsf3_pse+0x64>
 378:	9e 3f       	cpi	r25, 0xFE	; 254
 37a:	51 05       	cpc	r21, r1
 37c:	80 f0       	brcs	.+32     	; 0x39e <__mulsf3_pse+0xa0>
 37e:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_inf>
 382:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__fp_szero>
 386:	5f 3f       	cpi	r21, 0xFF	; 255
 388:	e4 f3       	brlt	.-8      	; 0x382 <__mulsf3_pse+0x84>
 38a:	98 3e       	cpi	r25, 0xE8	; 232
 38c:	d4 f3       	brlt	.-12     	; 0x382 <__mulsf3_pse+0x84>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b7 95       	ror	r27
 396:	f7 95       	ror	r31
 398:	e7 95       	ror	r30
 39a:	9f 5f       	subi	r25, 0xFF	; 255
 39c:	c1 f7       	brne	.-16     	; 0x38e <__mulsf3_pse+0x90>
 39e:	fe 2b       	or	r31, r30
 3a0:	88 0f       	add	r24, r24
 3a2:	91 1d       	adc	r25, r1
 3a4:	96 95       	lsr	r25
 3a6:	87 95       	ror	r24
 3a8:	97 f9       	bld	r25, 7
 3aa:	08 95       	ret

000003ac <__fp_inf>:
 3ac:	97 f9       	bld	r25, 7
 3ae:	9f 67       	ori	r25, 0x7F	; 127
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	08 95       	ret

000003b8 <__fp_nan>:
 3b8:	9f ef       	ldi	r25, 0xFF	; 255
 3ba:	80 ec       	ldi	r24, 0xC0	; 192
 3bc:	08 95       	ret

000003be <__fp_pscA>:
 3be:	00 24       	eor	r0, r0
 3c0:	0a 94       	dec	r0
 3c2:	16 16       	cp	r1, r22
 3c4:	17 06       	cpc	r1, r23
 3c6:	18 06       	cpc	r1, r24
 3c8:	09 06       	cpc	r0, r25
 3ca:	08 95       	ret

000003cc <__fp_pscB>:
 3cc:	00 24       	eor	r0, r0
 3ce:	0a 94       	dec	r0
 3d0:	12 16       	cp	r1, r18
 3d2:	13 06       	cpc	r1, r19
 3d4:	14 06       	cpc	r1, r20
 3d6:	05 06       	cpc	r0, r21
 3d8:	08 95       	ret

000003da <__fp_round>:
 3da:	09 2e       	mov	r0, r25
 3dc:	03 94       	inc	r0
 3de:	00 0c       	add	r0, r0
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__fp_round+0xc>
 3e2:	88 23       	and	r24, r24
 3e4:	52 f0       	brmi	.+20     	; 0x3fa <__fp_round+0x20>
 3e6:	bb 0f       	add	r27, r27
 3e8:	40 f4       	brcc	.+16     	; 0x3fa <__fp_round+0x20>
 3ea:	bf 2b       	or	r27, r31
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <__fp_round+0x18>
 3ee:	60 ff       	sbrs	r22, 0
 3f0:	04 c0       	rjmp	.+8      	; 0x3fa <__fp_round+0x20>
 3f2:	6f 5f       	subi	r22, 0xFF	; 255
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	08 95       	ret

000003fc <sprintf>:
 3fc:	ae e0       	ldi	r26, 0x0E	; 14
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	e4 e0       	ldi	r30, 0x04	; 4
 402:	f2 e0       	ldi	r31, 0x02	; 2
 404:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__prologue_saves__+0x1c>
 408:	0d 89       	ldd	r16, Y+21	; 0x15
 40a:	1e 89       	ldd	r17, Y+22	; 0x16
 40c:	86 e0       	ldi	r24, 0x06	; 6
 40e:	8c 83       	std	Y+4, r24	; 0x04
 410:	1a 83       	std	Y+2, r17	; 0x02
 412:	09 83       	std	Y+1, r16	; 0x01
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	9f e7       	ldi	r25, 0x7F	; 127
 418:	9e 83       	std	Y+6, r25	; 0x06
 41a:	8d 83       	std	Y+5, r24	; 0x05
 41c:	ae 01       	movw	r20, r28
 41e:	47 5e       	subi	r20, 0xE7	; 231
 420:	5f 4f       	sbci	r21, 0xFF	; 255
 422:	6f 89       	ldd	r22, Y+23	; 0x17
 424:	78 8d       	ldd	r23, Y+24	; 0x18
 426:	ce 01       	movw	r24, r28
 428:	01 96       	adiw	r24, 0x01	; 1
 42a:	0e 94 20 02 	call	0x440	; 0x440 <vfprintf>
 42e:	ef 81       	ldd	r30, Y+7	; 0x07
 430:	f8 85       	ldd	r31, Y+8	; 0x08
 432:	e0 0f       	add	r30, r16
 434:	f1 1f       	adc	r31, r17
 436:	10 82       	st	Z, r1
 438:	2e 96       	adiw	r28, 0x0e	; 14
 43a:	e4 e0       	ldi	r30, 0x04	; 4
 43c:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <__epilogue_restores__+0x1c>

00000440 <vfprintf>:
 440:	ab e0       	ldi	r26, 0x0B	; 11
 442:	b0 e0       	ldi	r27, 0x00	; 0
 444:	e6 e2       	ldi	r30, 0x26	; 38
 446:	f2 e0       	ldi	r31, 0x02	; 2
 448:	0c 94 b1 04 	jmp	0x962	; 0x962 <__prologue_saves__>
 44c:	6c 01       	movw	r12, r24
 44e:	7b 01       	movw	r14, r22
 450:	8a 01       	movw	r16, r20
 452:	fc 01       	movw	r30, r24
 454:	17 82       	std	Z+7, r1	; 0x07
 456:	16 82       	std	Z+6, r1	; 0x06
 458:	83 81       	ldd	r24, Z+3	; 0x03
 45a:	81 ff       	sbrs	r24, 1
 45c:	cc c1       	rjmp	.+920    	; 0x7f6 <vfprintf+0x3b6>
 45e:	ce 01       	movw	r24, r28
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	3c 01       	movw	r6, r24
 464:	f6 01       	movw	r30, r12
 466:	93 81       	ldd	r25, Z+3	; 0x03
 468:	f7 01       	movw	r30, r14
 46a:	93 fd       	sbrc	r25, 3
 46c:	85 91       	lpm	r24, Z+
 46e:	93 ff       	sbrs	r25, 3
 470:	81 91       	ld	r24, Z+
 472:	7f 01       	movw	r14, r30
 474:	88 23       	and	r24, r24
 476:	09 f4       	brne	.+2      	; 0x47a <vfprintf+0x3a>
 478:	ba c1       	rjmp	.+884    	; 0x7ee <vfprintf+0x3ae>
 47a:	85 32       	cpi	r24, 0x25	; 37
 47c:	39 f4       	brne	.+14     	; 0x48c <vfprintf+0x4c>
 47e:	93 fd       	sbrc	r25, 3
 480:	85 91       	lpm	r24, Z+
 482:	93 ff       	sbrs	r25, 3
 484:	81 91       	ld	r24, Z+
 486:	7f 01       	movw	r14, r30
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	29 f4       	brne	.+10     	; 0x496 <vfprintf+0x56>
 48c:	b6 01       	movw	r22, r12
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 494:	e7 cf       	rjmp	.-50     	; 0x464 <vfprintf+0x24>
 496:	91 2c       	mov	r9, r1
 498:	21 2c       	mov	r2, r1
 49a:	31 2c       	mov	r3, r1
 49c:	ff e1       	ldi	r31, 0x1F	; 31
 49e:	f3 15       	cp	r31, r3
 4a0:	d8 f0       	brcs	.+54     	; 0x4d8 <vfprintf+0x98>
 4a2:	8b 32       	cpi	r24, 0x2B	; 43
 4a4:	79 f0       	breq	.+30     	; 0x4c4 <vfprintf+0x84>
 4a6:	38 f4       	brcc	.+14     	; 0x4b6 <vfprintf+0x76>
 4a8:	80 32       	cpi	r24, 0x20	; 32
 4aa:	79 f0       	breq	.+30     	; 0x4ca <vfprintf+0x8a>
 4ac:	83 32       	cpi	r24, 0x23	; 35
 4ae:	a1 f4       	brne	.+40     	; 0x4d8 <vfprintf+0x98>
 4b0:	23 2d       	mov	r18, r3
 4b2:	20 61       	ori	r18, 0x10	; 16
 4b4:	1d c0       	rjmp	.+58     	; 0x4f0 <vfprintf+0xb0>
 4b6:	8d 32       	cpi	r24, 0x2D	; 45
 4b8:	61 f0       	breq	.+24     	; 0x4d2 <vfprintf+0x92>
 4ba:	80 33       	cpi	r24, 0x30	; 48
 4bc:	69 f4       	brne	.+26     	; 0x4d8 <vfprintf+0x98>
 4be:	23 2d       	mov	r18, r3
 4c0:	21 60       	ori	r18, 0x01	; 1
 4c2:	16 c0       	rjmp	.+44     	; 0x4f0 <vfprintf+0xb0>
 4c4:	83 2d       	mov	r24, r3
 4c6:	82 60       	ori	r24, 0x02	; 2
 4c8:	38 2e       	mov	r3, r24
 4ca:	e3 2d       	mov	r30, r3
 4cc:	e4 60       	ori	r30, 0x04	; 4
 4ce:	3e 2e       	mov	r3, r30
 4d0:	2a c0       	rjmp	.+84     	; 0x526 <vfprintf+0xe6>
 4d2:	f3 2d       	mov	r31, r3
 4d4:	f8 60       	ori	r31, 0x08	; 8
 4d6:	1d c0       	rjmp	.+58     	; 0x512 <vfprintf+0xd2>
 4d8:	37 fc       	sbrc	r3, 7
 4da:	2d c0       	rjmp	.+90     	; 0x536 <vfprintf+0xf6>
 4dc:	20 ed       	ldi	r18, 0xD0	; 208
 4de:	28 0f       	add	r18, r24
 4e0:	2a 30       	cpi	r18, 0x0A	; 10
 4e2:	40 f0       	brcs	.+16     	; 0x4f4 <vfprintf+0xb4>
 4e4:	8e 32       	cpi	r24, 0x2E	; 46
 4e6:	b9 f4       	brne	.+46     	; 0x516 <vfprintf+0xd6>
 4e8:	36 fc       	sbrc	r3, 6
 4ea:	81 c1       	rjmp	.+770    	; 0x7ee <vfprintf+0x3ae>
 4ec:	23 2d       	mov	r18, r3
 4ee:	20 64       	ori	r18, 0x40	; 64
 4f0:	32 2e       	mov	r3, r18
 4f2:	19 c0       	rjmp	.+50     	; 0x526 <vfprintf+0xe6>
 4f4:	36 fe       	sbrs	r3, 6
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <vfprintf+0xc4>
 4f8:	8a e0       	ldi	r24, 0x0A	; 10
 4fa:	98 9e       	mul	r9, r24
 4fc:	20 0d       	add	r18, r0
 4fe:	11 24       	eor	r1, r1
 500:	92 2e       	mov	r9, r18
 502:	11 c0       	rjmp	.+34     	; 0x526 <vfprintf+0xe6>
 504:	ea e0       	ldi	r30, 0x0A	; 10
 506:	2e 9e       	mul	r2, r30
 508:	20 0d       	add	r18, r0
 50a:	11 24       	eor	r1, r1
 50c:	22 2e       	mov	r2, r18
 50e:	f3 2d       	mov	r31, r3
 510:	f0 62       	ori	r31, 0x20	; 32
 512:	3f 2e       	mov	r3, r31
 514:	08 c0       	rjmp	.+16     	; 0x526 <vfprintf+0xe6>
 516:	8c 36       	cpi	r24, 0x6C	; 108
 518:	21 f4       	brne	.+8      	; 0x522 <vfprintf+0xe2>
 51a:	83 2d       	mov	r24, r3
 51c:	80 68       	ori	r24, 0x80	; 128
 51e:	38 2e       	mov	r3, r24
 520:	02 c0       	rjmp	.+4      	; 0x526 <vfprintf+0xe6>
 522:	88 36       	cpi	r24, 0x68	; 104
 524:	41 f4       	brne	.+16     	; 0x536 <vfprintf+0xf6>
 526:	f7 01       	movw	r30, r14
 528:	93 fd       	sbrc	r25, 3
 52a:	85 91       	lpm	r24, Z+
 52c:	93 ff       	sbrs	r25, 3
 52e:	81 91       	ld	r24, Z+
 530:	7f 01       	movw	r14, r30
 532:	81 11       	cpse	r24, r1
 534:	b3 cf       	rjmp	.-154    	; 0x49c <vfprintf+0x5c>
 536:	98 2f       	mov	r25, r24
 538:	9f 7d       	andi	r25, 0xDF	; 223
 53a:	95 54       	subi	r25, 0x45	; 69
 53c:	93 30       	cpi	r25, 0x03	; 3
 53e:	28 f4       	brcc	.+10     	; 0x54a <vfprintf+0x10a>
 540:	0c 5f       	subi	r16, 0xFC	; 252
 542:	1f 4f       	sbci	r17, 0xFF	; 255
 544:	9f e3       	ldi	r25, 0x3F	; 63
 546:	99 83       	std	Y+1, r25	; 0x01
 548:	0d c0       	rjmp	.+26     	; 0x564 <vfprintf+0x124>
 54a:	83 36       	cpi	r24, 0x63	; 99
 54c:	31 f0       	breq	.+12     	; 0x55a <vfprintf+0x11a>
 54e:	83 37       	cpi	r24, 0x73	; 115
 550:	71 f0       	breq	.+28     	; 0x56e <vfprintf+0x12e>
 552:	83 35       	cpi	r24, 0x53	; 83
 554:	09 f0       	breq	.+2      	; 0x558 <vfprintf+0x118>
 556:	59 c0       	rjmp	.+178    	; 0x60a <vfprintf+0x1ca>
 558:	21 c0       	rjmp	.+66     	; 0x59c <vfprintf+0x15c>
 55a:	f8 01       	movw	r30, r16
 55c:	80 81       	ld	r24, Z
 55e:	89 83       	std	Y+1, r24	; 0x01
 560:	0e 5f       	subi	r16, 0xFE	; 254
 562:	1f 4f       	sbci	r17, 0xFF	; 255
 564:	88 24       	eor	r8, r8
 566:	83 94       	inc	r8
 568:	91 2c       	mov	r9, r1
 56a:	53 01       	movw	r10, r6
 56c:	13 c0       	rjmp	.+38     	; 0x594 <vfprintf+0x154>
 56e:	28 01       	movw	r4, r16
 570:	f2 e0       	ldi	r31, 0x02	; 2
 572:	4f 0e       	add	r4, r31
 574:	51 1c       	adc	r5, r1
 576:	f8 01       	movw	r30, r16
 578:	a0 80       	ld	r10, Z
 57a:	b1 80       	ldd	r11, Z+1	; 0x01
 57c:	36 fe       	sbrs	r3, 6
 57e:	03 c0       	rjmp	.+6      	; 0x586 <vfprintf+0x146>
 580:	69 2d       	mov	r22, r9
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	02 c0       	rjmp	.+4      	; 0x58a <vfprintf+0x14a>
 586:	6f ef       	ldi	r22, 0xFF	; 255
 588:	7f ef       	ldi	r23, 0xFF	; 255
 58a:	c5 01       	movw	r24, r10
 58c:	0e 94 0c 04 	call	0x818	; 0x818 <strnlen>
 590:	4c 01       	movw	r8, r24
 592:	82 01       	movw	r16, r4
 594:	f3 2d       	mov	r31, r3
 596:	ff 77       	andi	r31, 0x7F	; 127
 598:	3f 2e       	mov	r3, r31
 59a:	16 c0       	rjmp	.+44     	; 0x5c8 <vfprintf+0x188>
 59c:	28 01       	movw	r4, r16
 59e:	22 e0       	ldi	r18, 0x02	; 2
 5a0:	42 0e       	add	r4, r18
 5a2:	51 1c       	adc	r5, r1
 5a4:	f8 01       	movw	r30, r16
 5a6:	a0 80       	ld	r10, Z
 5a8:	b1 80       	ldd	r11, Z+1	; 0x01
 5aa:	36 fe       	sbrs	r3, 6
 5ac:	03 c0       	rjmp	.+6      	; 0x5b4 <vfprintf+0x174>
 5ae:	69 2d       	mov	r22, r9
 5b0:	70 e0       	ldi	r23, 0x00	; 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <vfprintf+0x178>
 5b4:	6f ef       	ldi	r22, 0xFF	; 255
 5b6:	7f ef       	ldi	r23, 0xFF	; 255
 5b8:	c5 01       	movw	r24, r10
 5ba:	0e 94 01 04 	call	0x802	; 0x802 <strnlen_P>
 5be:	4c 01       	movw	r8, r24
 5c0:	f3 2d       	mov	r31, r3
 5c2:	f0 68       	ori	r31, 0x80	; 128
 5c4:	3f 2e       	mov	r3, r31
 5c6:	82 01       	movw	r16, r4
 5c8:	33 fc       	sbrc	r3, 3
 5ca:	1b c0       	rjmp	.+54     	; 0x602 <vfprintf+0x1c2>
 5cc:	82 2d       	mov	r24, r2
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	88 16       	cp	r8, r24
 5d2:	99 06       	cpc	r9, r25
 5d4:	b0 f4       	brcc	.+44     	; 0x602 <vfprintf+0x1c2>
 5d6:	b6 01       	movw	r22, r12
 5d8:	80 e2       	ldi	r24, 0x20	; 32
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 5e0:	2a 94       	dec	r2
 5e2:	f4 cf       	rjmp	.-24     	; 0x5cc <vfprintf+0x18c>
 5e4:	f5 01       	movw	r30, r10
 5e6:	37 fc       	sbrc	r3, 7
 5e8:	85 91       	lpm	r24, Z+
 5ea:	37 fe       	sbrs	r3, 7
 5ec:	81 91       	ld	r24, Z+
 5ee:	5f 01       	movw	r10, r30
 5f0:	b6 01       	movw	r22, r12
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 5f8:	21 10       	cpse	r2, r1
 5fa:	2a 94       	dec	r2
 5fc:	21 e0       	ldi	r18, 0x01	; 1
 5fe:	82 1a       	sub	r8, r18
 600:	91 08       	sbc	r9, r1
 602:	81 14       	cp	r8, r1
 604:	91 04       	cpc	r9, r1
 606:	71 f7       	brne	.-36     	; 0x5e4 <vfprintf+0x1a4>
 608:	e8 c0       	rjmp	.+464    	; 0x7da <vfprintf+0x39a>
 60a:	84 36       	cpi	r24, 0x64	; 100
 60c:	11 f0       	breq	.+4      	; 0x612 <vfprintf+0x1d2>
 60e:	89 36       	cpi	r24, 0x69	; 105
 610:	41 f5       	brne	.+80     	; 0x662 <vfprintf+0x222>
 612:	f8 01       	movw	r30, r16
 614:	37 fe       	sbrs	r3, 7
 616:	07 c0       	rjmp	.+14     	; 0x626 <vfprintf+0x1e6>
 618:	60 81       	ld	r22, Z
 61a:	71 81       	ldd	r23, Z+1	; 0x01
 61c:	82 81       	ldd	r24, Z+2	; 0x02
 61e:	93 81       	ldd	r25, Z+3	; 0x03
 620:	0c 5f       	subi	r16, 0xFC	; 252
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	08 c0       	rjmp	.+16     	; 0x636 <vfprintf+0x1f6>
 626:	60 81       	ld	r22, Z
 628:	71 81       	ldd	r23, Z+1	; 0x01
 62a:	07 2e       	mov	r0, r23
 62c:	00 0c       	add	r0, r0
 62e:	88 0b       	sbc	r24, r24
 630:	99 0b       	sbc	r25, r25
 632:	0e 5f       	subi	r16, 0xFE	; 254
 634:	1f 4f       	sbci	r17, 0xFF	; 255
 636:	f3 2d       	mov	r31, r3
 638:	ff 76       	andi	r31, 0x6F	; 111
 63a:	3f 2e       	mov	r3, r31
 63c:	97 ff       	sbrs	r25, 7
 63e:	09 c0       	rjmp	.+18     	; 0x652 <vfprintf+0x212>
 640:	90 95       	com	r25
 642:	80 95       	com	r24
 644:	70 95       	com	r23
 646:	61 95       	neg	r22
 648:	7f 4f       	sbci	r23, 0xFF	; 255
 64a:	8f 4f       	sbci	r24, 0xFF	; 255
 64c:	9f 4f       	sbci	r25, 0xFF	; 255
 64e:	f0 68       	ori	r31, 0x80	; 128
 650:	3f 2e       	mov	r3, r31
 652:	2a e0       	ldi	r18, 0x0A	; 10
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	a3 01       	movw	r20, r6
 658:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__ultoa_invert>
 65c:	88 2e       	mov	r8, r24
 65e:	86 18       	sub	r8, r6
 660:	45 c0       	rjmp	.+138    	; 0x6ec <vfprintf+0x2ac>
 662:	85 37       	cpi	r24, 0x75	; 117
 664:	31 f4       	brne	.+12     	; 0x672 <vfprintf+0x232>
 666:	23 2d       	mov	r18, r3
 668:	2f 7e       	andi	r18, 0xEF	; 239
 66a:	b2 2e       	mov	r11, r18
 66c:	2a e0       	ldi	r18, 0x0A	; 10
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	25 c0       	rjmp	.+74     	; 0x6bc <vfprintf+0x27c>
 672:	93 2d       	mov	r25, r3
 674:	99 7f       	andi	r25, 0xF9	; 249
 676:	b9 2e       	mov	r11, r25
 678:	8f 36       	cpi	r24, 0x6F	; 111
 67a:	c1 f0       	breq	.+48     	; 0x6ac <vfprintf+0x26c>
 67c:	18 f4       	brcc	.+6      	; 0x684 <vfprintf+0x244>
 67e:	88 35       	cpi	r24, 0x58	; 88
 680:	79 f0       	breq	.+30     	; 0x6a0 <vfprintf+0x260>
 682:	b5 c0       	rjmp	.+362    	; 0x7ee <vfprintf+0x3ae>
 684:	80 37       	cpi	r24, 0x70	; 112
 686:	19 f0       	breq	.+6      	; 0x68e <vfprintf+0x24e>
 688:	88 37       	cpi	r24, 0x78	; 120
 68a:	21 f0       	breq	.+8      	; 0x694 <vfprintf+0x254>
 68c:	b0 c0       	rjmp	.+352    	; 0x7ee <vfprintf+0x3ae>
 68e:	e9 2f       	mov	r30, r25
 690:	e0 61       	ori	r30, 0x10	; 16
 692:	be 2e       	mov	r11, r30
 694:	b4 fe       	sbrs	r11, 4
 696:	0d c0       	rjmp	.+26     	; 0x6b2 <vfprintf+0x272>
 698:	fb 2d       	mov	r31, r11
 69a:	f4 60       	ori	r31, 0x04	; 4
 69c:	bf 2e       	mov	r11, r31
 69e:	09 c0       	rjmp	.+18     	; 0x6b2 <vfprintf+0x272>
 6a0:	34 fe       	sbrs	r3, 4
 6a2:	0a c0       	rjmp	.+20     	; 0x6b8 <vfprintf+0x278>
 6a4:	29 2f       	mov	r18, r25
 6a6:	26 60       	ori	r18, 0x06	; 6
 6a8:	b2 2e       	mov	r11, r18
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <vfprintf+0x278>
 6ac:	28 e0       	ldi	r18, 0x08	; 8
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	05 c0       	rjmp	.+10     	; 0x6bc <vfprintf+0x27c>
 6b2:	20 e1       	ldi	r18, 0x10	; 16
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <vfprintf+0x27c>
 6b8:	20 e1       	ldi	r18, 0x10	; 16
 6ba:	32 e0       	ldi	r19, 0x02	; 2
 6bc:	f8 01       	movw	r30, r16
 6be:	b7 fe       	sbrs	r11, 7
 6c0:	07 c0       	rjmp	.+14     	; 0x6d0 <vfprintf+0x290>
 6c2:	60 81       	ld	r22, Z
 6c4:	71 81       	ldd	r23, Z+1	; 0x01
 6c6:	82 81       	ldd	r24, Z+2	; 0x02
 6c8:	93 81       	ldd	r25, Z+3	; 0x03
 6ca:	0c 5f       	subi	r16, 0xFC	; 252
 6cc:	1f 4f       	sbci	r17, 0xFF	; 255
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <vfprintf+0x29c>
 6d0:	60 81       	ld	r22, Z
 6d2:	71 81       	ldd	r23, Z+1	; 0x01
 6d4:	80 e0       	ldi	r24, 0x00	; 0
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 5f       	subi	r16, 0xFE	; 254
 6da:	1f 4f       	sbci	r17, 0xFF	; 255
 6dc:	a3 01       	movw	r20, r6
 6de:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__ultoa_invert>
 6e2:	88 2e       	mov	r8, r24
 6e4:	86 18       	sub	r8, r6
 6e6:	fb 2d       	mov	r31, r11
 6e8:	ff 77       	andi	r31, 0x7F	; 127
 6ea:	3f 2e       	mov	r3, r31
 6ec:	36 fe       	sbrs	r3, 6
 6ee:	0d c0       	rjmp	.+26     	; 0x70a <vfprintf+0x2ca>
 6f0:	23 2d       	mov	r18, r3
 6f2:	2e 7f       	andi	r18, 0xFE	; 254
 6f4:	a2 2e       	mov	r10, r18
 6f6:	89 14       	cp	r8, r9
 6f8:	58 f4       	brcc	.+22     	; 0x710 <vfprintf+0x2d0>
 6fa:	34 fe       	sbrs	r3, 4
 6fc:	0b c0       	rjmp	.+22     	; 0x714 <vfprintf+0x2d4>
 6fe:	32 fc       	sbrc	r3, 2
 700:	09 c0       	rjmp	.+18     	; 0x714 <vfprintf+0x2d4>
 702:	83 2d       	mov	r24, r3
 704:	8e 7e       	andi	r24, 0xEE	; 238
 706:	a8 2e       	mov	r10, r24
 708:	05 c0       	rjmp	.+10     	; 0x714 <vfprintf+0x2d4>
 70a:	b8 2c       	mov	r11, r8
 70c:	a3 2c       	mov	r10, r3
 70e:	03 c0       	rjmp	.+6      	; 0x716 <vfprintf+0x2d6>
 710:	b8 2c       	mov	r11, r8
 712:	01 c0       	rjmp	.+2      	; 0x716 <vfprintf+0x2d6>
 714:	b9 2c       	mov	r11, r9
 716:	a4 fe       	sbrs	r10, 4
 718:	0f c0       	rjmp	.+30     	; 0x738 <vfprintf+0x2f8>
 71a:	fe 01       	movw	r30, r28
 71c:	e8 0d       	add	r30, r8
 71e:	f1 1d       	adc	r31, r1
 720:	80 81       	ld	r24, Z
 722:	80 33       	cpi	r24, 0x30	; 48
 724:	21 f4       	brne	.+8      	; 0x72e <vfprintf+0x2ee>
 726:	9a 2d       	mov	r25, r10
 728:	99 7e       	andi	r25, 0xE9	; 233
 72a:	a9 2e       	mov	r10, r25
 72c:	09 c0       	rjmp	.+18     	; 0x740 <vfprintf+0x300>
 72e:	a2 fe       	sbrs	r10, 2
 730:	06 c0       	rjmp	.+12     	; 0x73e <vfprintf+0x2fe>
 732:	b3 94       	inc	r11
 734:	b3 94       	inc	r11
 736:	04 c0       	rjmp	.+8      	; 0x740 <vfprintf+0x300>
 738:	8a 2d       	mov	r24, r10
 73a:	86 78       	andi	r24, 0x86	; 134
 73c:	09 f0       	breq	.+2      	; 0x740 <vfprintf+0x300>
 73e:	b3 94       	inc	r11
 740:	a3 fc       	sbrc	r10, 3
 742:	11 c0       	rjmp	.+34     	; 0x766 <vfprintf+0x326>
 744:	a0 fe       	sbrs	r10, 0
 746:	06 c0       	rjmp	.+12     	; 0x754 <vfprintf+0x314>
 748:	b2 14       	cp	r11, r2
 74a:	88 f4       	brcc	.+34     	; 0x76e <vfprintf+0x32e>
 74c:	28 0c       	add	r2, r8
 74e:	92 2c       	mov	r9, r2
 750:	9b 18       	sub	r9, r11
 752:	0e c0       	rjmp	.+28     	; 0x770 <vfprintf+0x330>
 754:	b2 14       	cp	r11, r2
 756:	60 f4       	brcc	.+24     	; 0x770 <vfprintf+0x330>
 758:	b6 01       	movw	r22, r12
 75a:	80 e2       	ldi	r24, 0x20	; 32
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 762:	b3 94       	inc	r11
 764:	f7 cf       	rjmp	.-18     	; 0x754 <vfprintf+0x314>
 766:	b2 14       	cp	r11, r2
 768:	18 f4       	brcc	.+6      	; 0x770 <vfprintf+0x330>
 76a:	2b 18       	sub	r2, r11
 76c:	02 c0       	rjmp	.+4      	; 0x772 <vfprintf+0x332>
 76e:	98 2c       	mov	r9, r8
 770:	21 2c       	mov	r2, r1
 772:	a4 fe       	sbrs	r10, 4
 774:	10 c0       	rjmp	.+32     	; 0x796 <vfprintf+0x356>
 776:	b6 01       	movw	r22, r12
 778:	80 e3       	ldi	r24, 0x30	; 48
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 780:	a2 fe       	sbrs	r10, 2
 782:	17 c0       	rjmp	.+46     	; 0x7b2 <vfprintf+0x372>
 784:	a1 fc       	sbrc	r10, 1
 786:	03 c0       	rjmp	.+6      	; 0x78e <vfprintf+0x34e>
 788:	88 e7       	ldi	r24, 0x78	; 120
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	02 c0       	rjmp	.+4      	; 0x792 <vfprintf+0x352>
 78e:	88 e5       	ldi	r24, 0x58	; 88
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	b6 01       	movw	r22, r12
 794:	0c c0       	rjmp	.+24     	; 0x7ae <vfprintf+0x36e>
 796:	8a 2d       	mov	r24, r10
 798:	86 78       	andi	r24, 0x86	; 134
 79a:	59 f0       	breq	.+22     	; 0x7b2 <vfprintf+0x372>
 79c:	a1 fe       	sbrs	r10, 1
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <vfprintf+0x364>
 7a0:	8b e2       	ldi	r24, 0x2B	; 43
 7a2:	01 c0       	rjmp	.+2      	; 0x7a6 <vfprintf+0x366>
 7a4:	80 e2       	ldi	r24, 0x20	; 32
 7a6:	a7 fc       	sbrc	r10, 7
 7a8:	8d e2       	ldi	r24, 0x2D	; 45
 7aa:	b6 01       	movw	r22, r12
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 7b2:	89 14       	cp	r8, r9
 7b4:	38 f4       	brcc	.+14     	; 0x7c4 <vfprintf+0x384>
 7b6:	b6 01       	movw	r22, r12
 7b8:	80 e3       	ldi	r24, 0x30	; 48
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 7c0:	9a 94       	dec	r9
 7c2:	f7 cf       	rjmp	.-18     	; 0x7b2 <vfprintf+0x372>
 7c4:	8a 94       	dec	r8
 7c6:	f3 01       	movw	r30, r6
 7c8:	e8 0d       	add	r30, r8
 7ca:	f1 1d       	adc	r31, r1
 7cc:	80 81       	ld	r24, Z
 7ce:	b6 01       	movw	r22, r12
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 7d6:	81 10       	cpse	r8, r1
 7d8:	f5 cf       	rjmp	.-22     	; 0x7c4 <vfprintf+0x384>
 7da:	22 20       	and	r2, r2
 7dc:	09 f4       	brne	.+2      	; 0x7e0 <vfprintf+0x3a0>
 7de:	42 ce       	rjmp	.-892    	; 0x464 <vfprintf+0x24>
 7e0:	b6 01       	movw	r22, r12
 7e2:	80 e2       	ldi	r24, 0x20	; 32
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	0e 94 17 04 	call	0x82e	; 0x82e <fputc>
 7ea:	2a 94       	dec	r2
 7ec:	f6 cf       	rjmp	.-20     	; 0x7da <vfprintf+0x39a>
 7ee:	f6 01       	movw	r30, r12
 7f0:	86 81       	ldd	r24, Z+6	; 0x06
 7f2:	97 81       	ldd	r25, Z+7	; 0x07
 7f4:	02 c0       	rjmp	.+4      	; 0x7fa <vfprintf+0x3ba>
 7f6:	8f ef       	ldi	r24, 0xFF	; 255
 7f8:	9f ef       	ldi	r25, 0xFF	; 255
 7fa:	2b 96       	adiw	r28, 0x0b	; 11
 7fc:	e2 e1       	ldi	r30, 0x12	; 18
 7fe:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__epilogue_restores__>

00000802 <strnlen_P>:
 802:	fc 01       	movw	r30, r24
 804:	05 90       	lpm	r0, Z+
 806:	61 50       	subi	r22, 0x01	; 1
 808:	70 40       	sbci	r23, 0x00	; 0
 80a:	01 10       	cpse	r0, r1
 80c:	d8 f7       	brcc	.-10     	; 0x804 <strnlen_P+0x2>
 80e:	80 95       	com	r24
 810:	90 95       	com	r25
 812:	8e 0f       	add	r24, r30
 814:	9f 1f       	adc	r25, r31
 816:	08 95       	ret

00000818 <strnlen>:
 818:	fc 01       	movw	r30, r24
 81a:	61 50       	subi	r22, 0x01	; 1
 81c:	70 40       	sbci	r23, 0x00	; 0
 81e:	01 90       	ld	r0, Z+
 820:	01 10       	cpse	r0, r1
 822:	d8 f7       	brcc	.-10     	; 0x81a <strnlen+0x2>
 824:	80 95       	com	r24
 826:	90 95       	com	r25
 828:	8e 0f       	add	r24, r30
 82a:	9f 1f       	adc	r25, r31
 82c:	08 95       	ret

0000082e <fputc>:
 82e:	0f 93       	push	r16
 830:	1f 93       	push	r17
 832:	cf 93       	push	r28
 834:	df 93       	push	r29
 836:	fb 01       	movw	r30, r22
 838:	23 81       	ldd	r18, Z+3	; 0x03
 83a:	21 fd       	sbrc	r18, 1
 83c:	03 c0       	rjmp	.+6      	; 0x844 <fputc+0x16>
 83e:	8f ef       	ldi	r24, 0xFF	; 255
 840:	9f ef       	ldi	r25, 0xFF	; 255
 842:	2c c0       	rjmp	.+88     	; 0x89c <__stack+0x3d>
 844:	22 ff       	sbrs	r18, 2
 846:	16 c0       	rjmp	.+44     	; 0x874 <__stack+0x15>
 848:	46 81       	ldd	r20, Z+6	; 0x06
 84a:	57 81       	ldd	r21, Z+7	; 0x07
 84c:	24 81       	ldd	r18, Z+4	; 0x04
 84e:	35 81       	ldd	r19, Z+5	; 0x05
 850:	42 17       	cp	r20, r18
 852:	53 07       	cpc	r21, r19
 854:	44 f4       	brge	.+16     	; 0x866 <__stack+0x7>
 856:	a0 81       	ld	r26, Z
 858:	b1 81       	ldd	r27, Z+1	; 0x01
 85a:	9d 01       	movw	r18, r26
 85c:	2f 5f       	subi	r18, 0xFF	; 255
 85e:	3f 4f       	sbci	r19, 0xFF	; 255
 860:	31 83       	std	Z+1, r19	; 0x01
 862:	20 83       	st	Z, r18
 864:	8c 93       	st	X, r24
 866:	26 81       	ldd	r18, Z+6	; 0x06
 868:	37 81       	ldd	r19, Z+7	; 0x07
 86a:	2f 5f       	subi	r18, 0xFF	; 255
 86c:	3f 4f       	sbci	r19, 0xFF	; 255
 86e:	37 83       	std	Z+7, r19	; 0x07
 870:	26 83       	std	Z+6, r18	; 0x06
 872:	14 c0       	rjmp	.+40     	; 0x89c <__stack+0x3d>
 874:	8b 01       	movw	r16, r22
 876:	ec 01       	movw	r28, r24
 878:	fb 01       	movw	r30, r22
 87a:	00 84       	ldd	r0, Z+8	; 0x08
 87c:	f1 85       	ldd	r31, Z+9	; 0x09
 87e:	e0 2d       	mov	r30, r0
 880:	09 95       	icall
 882:	89 2b       	or	r24, r25
 884:	e1 f6       	brne	.-72     	; 0x83e <fputc+0x10>
 886:	d8 01       	movw	r26, r16
 888:	16 96       	adiw	r26, 0x06	; 6
 88a:	8d 91       	ld	r24, X+
 88c:	9c 91       	ld	r25, X
 88e:	17 97       	sbiw	r26, 0x07	; 7
 890:	01 96       	adiw	r24, 0x01	; 1
 892:	17 96       	adiw	r26, 0x07	; 7
 894:	9c 93       	st	X, r25
 896:	8e 93       	st	-X, r24
 898:	16 97       	sbiw	r26, 0x06	; 6
 89a:	ce 01       	movw	r24, r28
 89c:	df 91       	pop	r29
 89e:	cf 91       	pop	r28
 8a0:	1f 91       	pop	r17
 8a2:	0f 91       	pop	r16
 8a4:	08 95       	ret

000008a6 <__ultoa_invert>:
 8a6:	fa 01       	movw	r30, r20
 8a8:	aa 27       	eor	r26, r26
 8aa:	28 30       	cpi	r18, 0x08	; 8
 8ac:	51 f1       	breq	.+84     	; 0x902 <__ultoa_invert+0x5c>
 8ae:	20 31       	cpi	r18, 0x10	; 16
 8b0:	81 f1       	breq	.+96     	; 0x912 <__ultoa_invert+0x6c>
 8b2:	e8 94       	clt
 8b4:	6f 93       	push	r22
 8b6:	6e 7f       	andi	r22, 0xFE	; 254
 8b8:	6e 5f       	subi	r22, 0xFE	; 254
 8ba:	7f 4f       	sbci	r23, 0xFF	; 255
 8bc:	8f 4f       	sbci	r24, 0xFF	; 255
 8be:	9f 4f       	sbci	r25, 0xFF	; 255
 8c0:	af 4f       	sbci	r26, 0xFF	; 255
 8c2:	b1 e0       	ldi	r27, 0x01	; 1
 8c4:	3e d0       	rcall	.+124    	; 0x942 <__ultoa_invert+0x9c>
 8c6:	b4 e0       	ldi	r27, 0x04	; 4
 8c8:	3c d0       	rcall	.+120    	; 0x942 <__ultoa_invert+0x9c>
 8ca:	67 0f       	add	r22, r23
 8cc:	78 1f       	adc	r23, r24
 8ce:	89 1f       	adc	r24, r25
 8d0:	9a 1f       	adc	r25, r26
 8d2:	a1 1d       	adc	r26, r1
 8d4:	68 0f       	add	r22, r24
 8d6:	79 1f       	adc	r23, r25
 8d8:	8a 1f       	adc	r24, r26
 8da:	91 1d       	adc	r25, r1
 8dc:	a1 1d       	adc	r26, r1
 8de:	6a 0f       	add	r22, r26
 8e0:	71 1d       	adc	r23, r1
 8e2:	81 1d       	adc	r24, r1
 8e4:	91 1d       	adc	r25, r1
 8e6:	a1 1d       	adc	r26, r1
 8e8:	20 d0       	rcall	.+64     	; 0x92a <__ultoa_invert+0x84>
 8ea:	09 f4       	brne	.+2      	; 0x8ee <__ultoa_invert+0x48>
 8ec:	68 94       	set
 8ee:	3f 91       	pop	r19
 8f0:	2a e0       	ldi	r18, 0x0A	; 10
 8f2:	26 9f       	mul	r18, r22
 8f4:	11 24       	eor	r1, r1
 8f6:	30 19       	sub	r19, r0
 8f8:	30 5d       	subi	r19, 0xD0	; 208
 8fa:	31 93       	st	Z+, r19
 8fc:	de f6       	brtc	.-74     	; 0x8b4 <__ultoa_invert+0xe>
 8fe:	cf 01       	movw	r24, r30
 900:	08 95       	ret
 902:	46 2f       	mov	r20, r22
 904:	47 70       	andi	r20, 0x07	; 7
 906:	40 5d       	subi	r20, 0xD0	; 208
 908:	41 93       	st	Z+, r20
 90a:	b3 e0       	ldi	r27, 0x03	; 3
 90c:	0f d0       	rcall	.+30     	; 0x92c <__ultoa_invert+0x86>
 90e:	c9 f7       	brne	.-14     	; 0x902 <__ultoa_invert+0x5c>
 910:	f6 cf       	rjmp	.-20     	; 0x8fe <__ultoa_invert+0x58>
 912:	46 2f       	mov	r20, r22
 914:	4f 70       	andi	r20, 0x0F	; 15
 916:	40 5d       	subi	r20, 0xD0	; 208
 918:	4a 33       	cpi	r20, 0x3A	; 58
 91a:	18 f0       	brcs	.+6      	; 0x922 <__ultoa_invert+0x7c>
 91c:	49 5d       	subi	r20, 0xD9	; 217
 91e:	31 fd       	sbrc	r19, 1
 920:	40 52       	subi	r20, 0x20	; 32
 922:	41 93       	st	Z+, r20
 924:	02 d0       	rcall	.+4      	; 0x92a <__ultoa_invert+0x84>
 926:	a9 f7       	brne	.-22     	; 0x912 <__ultoa_invert+0x6c>
 928:	ea cf       	rjmp	.-44     	; 0x8fe <__ultoa_invert+0x58>
 92a:	b4 e0       	ldi	r27, 0x04	; 4
 92c:	a6 95       	lsr	r26
 92e:	97 95       	ror	r25
 930:	87 95       	ror	r24
 932:	77 95       	ror	r23
 934:	67 95       	ror	r22
 936:	ba 95       	dec	r27
 938:	c9 f7       	brne	.-14     	; 0x92c <__ultoa_invert+0x86>
 93a:	00 97       	sbiw	r24, 0x00	; 0
 93c:	61 05       	cpc	r22, r1
 93e:	71 05       	cpc	r23, r1
 940:	08 95       	ret
 942:	9b 01       	movw	r18, r22
 944:	ac 01       	movw	r20, r24
 946:	0a 2e       	mov	r0, r26
 948:	06 94       	lsr	r0
 94a:	57 95       	ror	r21
 94c:	47 95       	ror	r20
 94e:	37 95       	ror	r19
 950:	27 95       	ror	r18
 952:	ba 95       	dec	r27
 954:	c9 f7       	brne	.-14     	; 0x948 <__ultoa_invert+0xa2>
 956:	62 0f       	add	r22, r18
 958:	73 1f       	adc	r23, r19
 95a:	84 1f       	adc	r24, r20
 95c:	95 1f       	adc	r25, r21
 95e:	a0 1d       	adc	r26, r0
 960:	08 95       	ret

00000962 <__prologue_saves__>:
 962:	2f 92       	push	r2
 964:	3f 92       	push	r3
 966:	4f 92       	push	r4
 968:	5f 92       	push	r5
 96a:	6f 92       	push	r6
 96c:	7f 92       	push	r7
 96e:	8f 92       	push	r8
 970:	9f 92       	push	r9
 972:	af 92       	push	r10
 974:	bf 92       	push	r11
 976:	cf 92       	push	r12
 978:	df 92       	push	r13
 97a:	ef 92       	push	r14
 97c:	ff 92       	push	r15
 97e:	0f 93       	push	r16
 980:	1f 93       	push	r17
 982:	cf 93       	push	r28
 984:	df 93       	push	r29
 986:	cd b7       	in	r28, 0x3d	; 61
 988:	de b7       	in	r29, 0x3e	; 62
 98a:	ca 1b       	sub	r28, r26
 98c:	db 0b       	sbc	r29, r27
 98e:	0f b6       	in	r0, 0x3f	; 63
 990:	f8 94       	cli
 992:	de bf       	out	0x3e, r29	; 62
 994:	0f be       	out	0x3f, r0	; 63
 996:	cd bf       	out	0x3d, r28	; 61
 998:	09 94       	ijmp

0000099a <__epilogue_restores__>:
 99a:	2a 88       	ldd	r2, Y+18	; 0x12
 99c:	39 88       	ldd	r3, Y+17	; 0x11
 99e:	48 88       	ldd	r4, Y+16	; 0x10
 9a0:	5f 84       	ldd	r5, Y+15	; 0x0f
 9a2:	6e 84       	ldd	r6, Y+14	; 0x0e
 9a4:	7d 84       	ldd	r7, Y+13	; 0x0d
 9a6:	8c 84       	ldd	r8, Y+12	; 0x0c
 9a8:	9b 84       	ldd	r9, Y+11	; 0x0b
 9aa:	aa 84       	ldd	r10, Y+10	; 0x0a
 9ac:	b9 84       	ldd	r11, Y+9	; 0x09
 9ae:	c8 84       	ldd	r12, Y+8	; 0x08
 9b0:	df 80       	ldd	r13, Y+7	; 0x07
 9b2:	ee 80       	ldd	r14, Y+6	; 0x06
 9b4:	fd 80       	ldd	r15, Y+5	; 0x05
 9b6:	0c 81       	ldd	r16, Y+4	; 0x04
 9b8:	1b 81       	ldd	r17, Y+3	; 0x03
 9ba:	aa 81       	ldd	r26, Y+2	; 0x02
 9bc:	b9 81       	ldd	r27, Y+1	; 0x01
 9be:	ce 0f       	add	r28, r30
 9c0:	d1 1d       	adc	r29, r1
 9c2:	0f b6       	in	r0, 0x3f	; 63
 9c4:	f8 94       	cli
 9c6:	de bf       	out	0x3e, r29	; 62
 9c8:	0f be       	out	0x3f, r0	; 63
 9ca:	cd bf       	out	0x3d, r28	; 61
 9cc:	ed 01       	movw	r28, r26
 9ce:	08 95       	ret

000009d0 <_exit>:
 9d0:	f8 94       	cli

000009d2 <__stop_program>:
 9d2:	ff cf       	rjmp	.-2      	; 0x9d2 <__stop_program>
